<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hontek.recommend.dao.MemberRecommendDao">

	<resultMap id="BaseResultMap" type="com.hontek.recommend.model.TbMemberRecommend">
		<id column="mr_id" property="mrId" jdbcType="INTEGER" />
		<result column="member_id" property="memberId" jdbcType="INTEGER" />
		<result column="order_id" property="orderId" jdbcType="INTEGER" />
		<result column="recommend_member_id" property="recommendMemberId"
			jdbcType="INTEGER" />
		<result column="order_money" property="orderMoney" jdbcType="DOUBLE" />
		<result column="recommend_money" property="recommendMoney"
			jdbcType="DOUBLE" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="scale" property="scale" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		
		
		
		 <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
		 <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		  <result column="goods_count" property="goodsCount" jdbcType="VARCHAR" />
		   <result column="goods_price" property="goodsPrice" jdbcType="VARCHAR" />
		  <result column="nickName" property="nickName" jdbcType="VARCHAR" />
		   <result column="model_name" property="modelName" jdbcType="VARCHAR" />
		     <result column="nickName1" property="nickName1" jdbcType="VARCHAR" />
		  
	</resultMap>

	<sql id="Base_Column_List">
		mr_id,member_id,recommend_member_id,order_id,order_money,recommend_money,state,scale,create_time
	</sql>


	<select id="findPageList" parameterType="com.hontek.comm.util.SearchPageUtil"
		resultMap="BaseResultMap">
		select  m.*,u.nickname,u1.nickname as nickname1,g.goods_name,g.goods_id,model_name,o.goods_count,o.goods_price
		 from tb_member_recommend m left join 
		 tb_order_detail o on m.order_id=o.order_id left join 
		 tb_goods g on o.goods_id=g.goods_id left  join
		 tb_member_user u on m.member_id=u.member_id left join
		 tb_goods_model m1 on g.goods_no=m1.model_no left join 
		 tb_member_user u1 on m.recommend_member_id=u1.member_id 
		 where 1 = 1 
	
		<if test="params != null and params.state != null and params.state !=''" >
	    and m.state = #{params.state,jdbcType=INTEGER}
	    </if>
	    <if test="params != null and params.recommendMemberId != null and params.recommendMemberId !=''" >
	    and m.recommend_member_id = #{params.recommendMemberId,jdbcType=INTEGER}
	    </if>
	     <if test="params != null and params.orderId != null and params.orderId !=''" >
	    and m.order_id = #{params.orderId,jdbcType=INTEGER}
	    </if>
	     <if test="params != null and params.nickName1 != null and params.nickName1 !=''" >
	    and u1.nickname = #{params.nickname1,jdbcType=INTEGER}
	    </if>
		
	</select>

	<select id="getCount" parameterType="com.hontek.comm.util.SearchPageUtil"
		resultType="java.lang.Integer">
		SELECT COUNT(*) from tb_member_recommend where 1 = 1
		<if test="params != null and params.state != null and params.state !=''" >
	    and state = #{params.state,jdbcType=INTEGER}
	    </if>
	</select>

	<insert id="add" parameterType="com.hontek.member.model.TbMemberLevel">
		insert into tb_member_recommend
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="mrId != null">
				mr_id,
			</if>
			<if test="memberId != null">
				member_id,
			</if>
			<if test="recommendMemberId != null">
				recommend_member_id,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="orderMoney != null">
				order_money,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="scale != null">
				scale,
			</if>
			<if test="recommendmoney != null">
				recommend_money,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			
			
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="mrId != null">
				#{mrId,jdbcType=INTEGER},
			</if>
			<if test="memberId != null">
				#{memberId,jdbcType=INTEGER},
			</if>
			<if test="recommendMemberId != null">
				#{recommend_member_id,jdbcType=INTEGER},
			</if>
			<if test="orderId != null">
				#{order_id,jdbcType=INTEGER},
			</if>
			<if test="orderMoney != null">
				#{order_money,jdbcType=DOUBLE},
			</if>
			<if test="recommendMoney != null">
				#{recommend_money,jdbcType=DOUBLE},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="scale != null">
				#{scale,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="com.hontek.member.model.TbMemberLevel">
		update tb_member_recommend
		<set>
			<if test="memberId != null">
				member_id = #{memberId,jdbcType=INTEGER},
			</if>
			<if test="recommend_member_id != null">
				recommend_member_id =
				#{recommend_member_id,jdbcType=INTEGER},
			</if>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=INTEGER},
			</if>
			<if test="orderMoney != null">
				order_money = #{orderMoney,jdbcType=DOUBLE},
			</if>
			<if test="recommendMoney != null">
				recommend_money = #{recommendMoney,jdbcType=DOUBLE},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="scale != null">
				scale = #{scale,jdbcType=VARCHAR},
			</if>
		</set>
		where mr_id = #{mrId,jdbcType=INTEGER}
	</update>

</mapper>